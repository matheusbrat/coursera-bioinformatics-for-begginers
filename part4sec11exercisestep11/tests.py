import pytest

from part4sec11exercisestep11.helpers import gms_with_pseudo


@pytest.mark.parametrize('dna, k, t, o', ((['GGCGTTCAGGCA','AAGAATCAGTCA','CAAGGAGTTCGC','CACGTCAATCAC','CAATAATATTCG'], 3, 5, ['TTC','ATC','TTC','ATC','TTC']),
                                          (['AGGCGGCACATCATTATCGATAACGATTCGCCGCATTGCC','ATCCGTCATCGAATAACTGACACCTGCTCTGGCACCGCTC','AAGCGTCGGCGGTATAGCCAGATAGTGCCAATAATTTCCT','AGTCGGTGGTGAAGTGTGGGTTATGGGGAAAGGCAGACTG','AACCGGACGGCAACTACGGTTACAACGCAGCAAGAATATT','AGGCGTCTGTTGTTGCTAACACCGTTAAGCGACGGCAACT','AAGCGGCCAACGTAGGCGCGGCTTGGCATCTCGGTGTGTG','AATTGAAAGGCGCATCTTACTCTTTTCGCTTTCAAAAAAA'], 5, 8, ['AGGCG','ATCCG','AAGCG','AGTCG','AACCG','AGGCG','AGGCG','AGGCG']),
                                          (['GCACATCATTAAACGATTCGCCGCATTGCCTCGATAGGCG','TCATAACTGACACCTGCTCTGGCACCGCTCATCCGTCGAA','AAGCGGGTATAGCCAGATAGTGCCAATAATTTCCTTCGGC','AGTCGGTGGTGAAGTGTGGGTTATGGGGAAAGGCAGACTG','AACCGGACGGCAACTACGGTTACAACGCAGCAAGAATATT','AGGCGTCTGTTGTTGCTAACACCGTTAAGCGACGGCAACT','AAGCTTCCAACATCGTCTTGGCATCTCGGTGTGTGAGGCG','AATTGAACATCTTACTCTTTTCGCTTTCAAAAAAAAGGCG'], 5, 8, ['AGGCG','TGGCA','AAGCG','AGGCA','CGGCA','AGGCG','AGGCG','AGGCG']),
                                          (['GCACATCATTATCGATAACGATTCATTGCCAGGCGGCCGC','TCATCGAATAACTGACACCTGCTCTGGCTCATCCGACCGC','TCGGCGGTATAGCCAGATAGTGCCAATAATTTCCTAAGCG','GTGGTGAAGTGTGGGTTATGGGGAAAGGCAGACTGAGTCG','GACGGCAACTACGGTTACAACGCAGCAAGAATATTAACCG','TCTGTTGTTGCTAACACCGTTAAGCGACGGCAACTAGGCG','GCCAACGTAGGCGCGGCTTGGCATCTCGGTGTGTGAAGCG','AAAGGCGCATCTTACTCTTTTCGCTTTCAAAAAAAAATTG'], 5, 8, ['GGCGG','GGCTC','GGCGG','GGCAG','GACGG','GACGG','GGCGC','GGCGC']),
                                          (['GCACATCATTATCGATAACGATTCATTGCCAGGCGGCCGC','TCATCGAATAACTGACACCTGCTCTGGCTCATCCGACCGC','TCGGCGGTATAGCCAGATAGTGCCAATAATTTCCTAAGCG','GTGGTGAAGTGTGGGTTATGGGGAAAGGCAGACTGAGTCG','GACGGCAACTACGGTTACAACGCAGCAAGAATATTAACCG','TCTGTTGTTGCTAACACCGTTAAGCGACGGCAACTAGGCG','GCCAACGTAGGCGCGGCTTGGCATCTCGGTGTGTGAAGCG','AAAGGCGCATCTTACTCTTTTCGCTTTCAAAAAAAAATTG'], 3, 8, ['GGC','GGC','GGC','GGC','GGC','GGC','GGC','GGC'])))
def test_gms_with_pseudo(dna, k, t, o):
    assert gms_with_pseudo(dna, k, t) == o
